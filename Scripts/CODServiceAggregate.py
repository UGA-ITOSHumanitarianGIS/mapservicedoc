# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# CODServiceLookups.py
# Created on: 2020-04-06 09:48:01.00000
#   (generated by ArcGIS/ModelBuilder)
# Author: ADR
# Description: Parse the services hosted by ITOS to get the level data and
#   Hydrate a datasource for CODVersion2 API
# Called by: n/a
# ---------------------------------------------------------------------------

# Import arcpy module
import json
import sys
import datetime
import urllib2
import requests
import os
import re


# Local variables:
 
refreshLog = os.path.join(os.getcwd(), "serviceAggProc.log")#r"c$\\scripts\\USAIDCODV2Process\\lookuprefresh.log"
fileName = os.path.join(os.getcwd(), "gistmapsAggData.log")

def log(message):
    with open(refreshLog, 'a') as logMessage:
        logMessage.write('%s - %s\n' % (str(datetime.datetime.now()), str(message)))    
    return

def getLUSvs():

    try:
       
        log("Accessing list of services...")

        # App log
        url = 'https://gistmaps.itos.uga.edu/arcgis/rest/services/COD_External/?f=pjson'
        ret = requests.get(url)
		
		
        if ret.status_code > 206:
             raise Exception(' application did not handle import success message properly.')

        obj = ret.json()
        svcs = json.dumps(obj)
        svcsj = json.loads(svcs)
        svcLUs = []
        jsonData = []
        for i in svcsj["services"]:
            if i['type'] == 'MapServer':
                if not re.search('pcode', i['name']):
                    url2 = 'https://gistmaps.itos.uga.edu/arcgis/rest/services/' + i["name"] +'/MapServer/0/query?where=0%3D0&outFields=*&f=pjson'
                    print (url2)
                    ret2 = requests.get(url2)
                    if ret2.status_code > 206:
                        raise Exception(' application did not handle import success message properly.')
              
                    obj2 = ret2.json()
                    obj2j = json.dumps(obj2, ensure_ascii=False).encode('utf8')
                    obj2jsvc = json.loads(obj2j)
                    fe = json.dumps(obj2jsvc["features"], ensure_ascii=False).encode('utf8')
                    #urlluidobj = str(fe)[1:-1]
                    #idstr = str(urlluidobj).replace('u\'', '\'')
                    #if len(idstr) > 0:
                    #    luidstr = json.loads(idstr)
                    #    cname = ''
                    #    if re.search('admin0Name_en', str(luidstr)):
                    #        cname = luidstr["attributes"]["admin0Name_en"]
                        
                    #    dataDict = {'admin0Name': cname,
                    #        'admin0Pcode': luidstr["attributes"]["admin0Pcode"],
                    #        'url': 'https://gistmaps.itos.uga.edu/arcgis/rest/services/' + i["name"] +'/MapServer/0/',
                    #       'country': cname
                    #    }
                    #print dataDict
                    #jsonData.append(dataDict)
                    with open(fileName, 'w') as fp:
                        json.dump(jsonData, fp, indent=4)

                   
        log("service info fetched.....")            
        return svcLUs
        
        		
    except Exception, e:
        log("Exception caught:  " + str(e))
        return svcLUs


# Run app with messaging and flow
log("Beginning python process...")
luURLs = getLUSvs()
print('Data has written into %s file' %(fileName))
log("Python process complete...")
